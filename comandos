<?php

php artisan serve
php artisan down/up
php artisan list

PrincipalController@principal

php artisan route:list

php artisan make:controller FornecedorControler

//criar controller como metodos predefinidos com --resource
php artisan make:controller --resource  ProdutoController --model=Produto

php artisan make:model fornecedor -m
(
	php artisan make:model fornecedor
	php artisan make:migration create_fornecedores_table
)

php artisan migrate:rollback
php artisan migrate:rollback --step=2

php artisan migrate:status
php artisan migrate:reset     - down
php artisan migrate:refresh   - down e up
php artisan migrate:fresh     - drop e up

eloquent orm -> padrao active record
JPA -> padrao data mapper

php artisan tinker -> console interativo para acessar classe do projeto

methods static eloquent:
\App\Fornecedor::create([]);
\App\Fornecedor::all();
\App\Fornecedor::find(id);
\App\Fornecedor::find([id1, id2]);
\App\SiteContato::where('motivo_contato', '<', '2')->get();
\App\SiteContato::where('mensagem', 'like', '%detalhes%')->get();
\App\SiteContato::whereIn('motivo_contato', [1,2])->get();
\App\SiteContato::whereNotIn('motivo_contato', [1,2])->get();
\App\SiteContato::whereBetween('id', [3,6])->get();
\App\SiteContato::whereNotBetween('id', [3,6])->get();
\App\SiteContato::where('nome', '<>', 'Fernando')->whereIn('motivo_contato', [1,2])->
    whereBetween('created_at', ['2025-01-01 00:00:00', '2025-01-31 23:59:59'])->get();
\App\SiteContato::where('nome', '<>', 'Fernando')->orWhereIn('motivo_contato', [1,2])->
    orWhereBetween('created_at', ['2025-01-01 00:00:00', '2025-01-31 23:59:59'])->get();
\App\SiteContato::whereNull('created_at')->get();
\App\SiteContato::whereNotNull('created_at')->get();
\App\SiteContato::whereDate('created_at', '2025-01-29')->get();
\App\SiteContato::whereDay('created_at', '29')->get();
\App\SiteContato::whereMonth('created_at', '01')->get();
\App\SiteContato::whereYear('created_at', '2025')->get();
\App\SiteContato::whereTime('created_at', '15:55:22')->get();
\App\SiteContato::whereTime('created_at', '>', '15:00:00')->get();
\App\SiteContato::whereColumn('created_at', 'updated_at')->get();
\App\SiteContato::whereColumn('created_at', '<>', 'updated_at')->get();
\App\SiteContato::where(function ($query) {
    $query->where('nome', 'Jorge')->orWhere('nome', 'Ana');
})->where(function($query){
    $query->whereIn('motivo_contato', [1,2])->orWhereBetween('id', [4,6]);
})->get();
\App\SiteContato::where('nome', '<>', 'Fernando')->orderBy('nome', 'asc')->orderBy('motivo_contato', 'desc')->get();


Collections:
\App\SiteContato::where('id', '>', 3)->first();
\App\SiteContato::where('id', '>', 3)->last();
\App\SiteContato::where('id', '>', 3)->reverse();
\App\SiteContato::all()->toArray();
\App\SiteContato::all()->pluck('email');
\App\SiteContato::all()->pluck('email')->reverse()->first();
\App\SiteContato::all()->pluck('email', 'nome');// nome sera a chave de cada item do array

Update_Registros:
$fornecedor = \App\Fornecedor::find(1);
$fornecedor->nome = 'Fornecedor 123';
$fornecedor->save();

$fornecedor = \App\Fornecedor::find(3);
$fornecedor->fill(['nome' => 'Fornecedor ABC', 'site' => 'fornecedor@alterado']);//depende da variavel fillable na classe
$fornecedor->save();

\App\Fornecedor::whereIn('id', [1,3])->update(['uf' => 'SP']);

Delete_Registros:
\App\SiteContato::find(7)->delete();
\App\SiteContato::destroy(6);//pode ser passado um array ou uma collection de ids

Soft Delete: Uso de Trait
$sitecontato = \App\SiteContato::find(4)->delete();
$sitecontato = \App\SiteContato::find(4)->forceDelete();//para excluir definitivamente
$sitecontato = \App\SiteContato::withTrashed()->get();//retorna todas as rows inclusive as deletadas soft
$sitecontato = \App\SiteContato::onlyTrashed()->get();//retorna todas as rows deletadas soft

$sitecontato = \App\SiteContato::withTrashed()->get();
$sitecontato[3]->restore();
//or
\App\SiteContato::withTrashed()->where('id', 4)->restore();

Seeeders:
php artisan make:seeder FornecedorSeeder
php artisan db:seed //para rodar todos os seeders
php artisan db:seed --class=SiteContatoSeeder
php artisan migrate:fresh --seed //para recriaro banco e rodar os seeders

Factories:
php artisan make:factory SiteContatoFactory --model=SiteContato

Formularios:
adicionar @csrf dentro do form//criar input hidden com token


middleware: //para ativa-lo tem que atribui-lo a rota ou controlador
php artisan make:middleware LogAcessoMiddleware
$ip = $request->server->get('REMOTE_ADDR');
//apelidando middlewares
'log.acesso' => \App\Http\Middleware\LogAcessoMiddleware::class,

Routes:
Route::get('/produto', 'ProdutoController@index')->name('app.produto');
//para excluir uma rota e gerar as outras
Route::resource('produto', 'ProdutoController')->except(['destroy']);
//para gerar apenas uma rota
Route::resource('produto', 'ProdutoController')->only(['destroy']);
//para gerar todas as rotas
Route::resource('produto', 'ProdutoController');
